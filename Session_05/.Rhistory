help()
undo help.request()
help.request()
demo()
help.start
topic
head(df2)
df2 <- read.table("C:/Users/Victoria/Desktop/R-Course-2016/data/03-1_aeh(m).txt", header=TRUE)
df2
table(df2$GESCHLECHT)
barplot(table(df2$GESCHLECHT))
head(df2)
table(df2$GENRE)
install.packages("swirl")
library("swirl")
swirl()
5+7
x <- 5+7
x
x-3
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
z(555)
q <- (z,555,z)
z <- c(555)
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- c(z/my_sqrt)
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
swirl()
library("swirl")
ls()
rm(list=ls())
swirl()
data(cars)
?cars
head()
data(cars)
head(cars)
plot(data("cars"))
plot(cars)
?plot()
?plot
plot(x, y)
plot(x= cars$speed, y = cars$dist)
plot(x= cars$dist, y = cars$speed)
plot(x= cars$speed, y = cars$dist)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab= "Dist")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x= cars$speed, y = cars$dist)
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
main("My Plot")
plot(cars, main = "My Plot")
plot(cars, main = "My Plot", submain = "My Plot Subtitle")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = "2")
plot(cars, col = 2)
plot(cars, col = 2, xlim = c(10, 15))
plot(cars, xlim = c(10, 15))
plot(cars, pch = 2)
?mtcars
ls()
library(swirl)
swirl()
rm(list=ls())
q()
library(readr)
install.packages("tidyverse")
library(tidyverse)
library(tidyverse)
library(readr)
install.packages("tidyverse")
library(tidyverse)
install.packages("readr")
library(readr)
?seq
seq()
seq(1, 100)
plot(rnorm(100))
plot(rnorm(100))
set.seed(1)
plot(rnorm(100))
plot(rnorm(100))
install.packages(xml)
"XML"
install.packages("XML")
library(XML)
tokens <- vector('character')
types <- vector('character')
xmlEventParse(
"../data/t_990505_47.xml",
handlers = list(
't' = function(name, attr) {
tokens <<- c(tokens, attr['word'])
types <<- c(types, attr['lemma'])
## morphology
}
),
addContext = FALSE
)
#names(tokens) <- NULL
tokens <- unname(tokens)
library(XML)
tokens <- vector('character')
types <- vector('character')
wortart <- vector('character')
xmlEventParse(
"../data/t_990505_47.xml",
handlers = list(
't' = function(name, attr) {
tokens <<- c(tokens, attr['word'])
types <<- c(types, attr['lemma'])
wortart <<- c(wortart, attr['pos'])
## morphology
}
),
addContext = FALSE
)
#names(tokens) <- NULL
tokens <- unname(tokens)
df1 <- data.frame(tokens, types, wortart)
df1$tokens
df1[order(df1$tokens), ]
mean(subset(df1§wortart == "XML"))
mean(subset(df1§Wortart == "XML"))
mean(subset(df1§wortart == "nn"))
mean(subset(df1§wortart == "NN"))
mean(subset(nchar(tokens), df1$wortart == "NN"))
library(XML)
tokens <- vector('character')
types <- vector('character')
wortart <- vector('character')
genus <- vector('character')
xmlEventParse(
"../data/t_990505_47.xml",
handlers = list(
't' = function(name, attr) {
tokens <<- c(tokens, attr['word'])
types <<- c(types, attr['lemma'])
wortart <<- c(wortart, attr['pos'])
genus <<- c(genus, attr['morph'])
## morphology
}
),
addContext = FALSE
)
#names(tokens) <- NULL
tokens <- unname(tokens)
df1[order(df1$genus), ]
library(XML)
tokens <- vector('character')
types <- vector('character')
wortart <- vector('character')
genus <- vector('character')
xmlEventParse(
"../data/t_990505_47.xml",
handlers = list(
't' = function(name, attr) {
tokens <<- c(tokens, attr['word'])
types <<- c(types, attr['lemma'])
wortart <<- c(wortart, attr['pos'])
genus <<- c(genus, attr['morph'])
## morphology
}
),
addContext = FALSE
)
#names(tokens) <- NULL
tokens <- unname(tokens)
df1[order(df1$genus), ]
df1 <- data.frame(tokens, types, wortart, genus)
df1[order(df1$genus), ]
table(df1$genus)
sort(table(df1$genus))
subset(df1, df1$Klasse == 'geschlossen' & df1$Wortart %in% c('tokens', 'types'))
subset(df1, df1$Wortart %in% c('tokens', 'types'))
types%in%tokens
table(types%in%tokens)
table(tokens%in%types)
setwd("C:/Users/Victoria/Desktop/R-Course-2016/Session_05")
write.table(df1, file = 'df1.csv', sep = '\t')
